# 리스트(list) 자료형
# 여러개의 값을 변수 1개에 저장
# ex
# [1, 2, 3, 4, 5, 6, 7, 8, 9]
# [1, 1, 1, 1, 1]
# ["Hello,", "World", "Python"]
# [1, "Hello", 2, "WOW"]
# [1, 2, ["Hello", "World"]]
# [] # 비워둔 list는 추후 추가 가능
# # []는 엘레멘트, 원소, 요소라고도 한다, 0개 이상 자료를 가지고 있는 자료형

# li_1 = [1, 2, 3] #원소 3개
# print(li_1[0]) # 1
# print(li_1[1]) # 2
# print(li_1[2]) # 3
# print(li_1[-1]) # 3
# print(li_1[0] + li_1[1]) # 3

# li_2=[1,2,3,[4,5,6]] # 원소(문자?) 4개 []=1개
# print(li_2[3][0]) # 앞에서 부터 순서대로 불러옴 출력은 4
# [[1 2 3],  행 ㅡ
#  [4 5 6],  렬 ㅣ
#  [7 8 9]] #[[]]2차원 #벡터 1=0차원(점), 점선=1차원, 선끼리 묶으면 2차원, 선하나가 더 생기면 축이 더 생겨서 3차원
# print(li_2[2:3])
# print(li_2[1:])
# print(li_2[0:2])
# print(li_2[3][0:2])
# print(li_2[0:1]) # 인덱싱은 값만 꺼내오고, 슬라이싱은 리스트의 형태로 가져옴

# li_3 = [1, 2, 3, 4, 5] #출력 결과가 [2,3]이 되도록 만드시오.
# print(len(li_3)) # 5   #len 사용법
# print(li_3[1:3]) # [2,3]
# [1, 2, 3, 4, 5]
# li_3[0] = 10  # li_3의 1,2,3,4,5 중 [0] 자리의 1이 10으로 변환
# print(li_3) # [10,2,3,4,5]

# append(ex.원소) #추가
# 리스트의 마지막에 원소를 추가
# li_4=[1,2,3]
# li_4.append(4) #여기까지 할 경우 [1,2,3,4] 출력됨 
# li_4.append("문자") # 위와 동 [1,2,3,4,'문자']
# li_4.append([1,2,3]) # 위와 동 [1,2,3,4,'문자',[1,2,3]]
# print(li_4)

# insert(ex.인덱스, 원소) #삽입
# 인덱스 위치에 원소 삽입
# li=[1,2,3] 
# li.insert(1, 10) # <-함수가 없을 경우 [1,2,3] 추가 할 경우 1 다음 10이 오게함
# print(li) # [1,10,2,3]

# remove(ex.값) #제거
# 리스트에서 함수에 입력된 값과 같은 값을 찾아 삭제함
# 먼저 나오는 값만 삭제
# 리스트에 없는 값을 삭제하려고 하면 error
#li=[1,2,3,2]
#li.remove(10)
#print(li) # answer [1,3,2]

# pop(인덱스)
# 리스트의 인덱스 위치의 요소(값)를 *꺼낸다 = 튀어나오다*
# 인덱스를 함수에 전달하지 않으면 제일 마지막 요소를 *꺼낸다 = 튀어나오다*
# 리스트 안의 값을 꺼내서 따로 저장 가능
#li = [1,2,3,4]
#a = li.pop()
#li.pop()
#print(li) # [1,2,3]
#print(a) # 4
#b=li.pop(1)
#print(li) # [1,3]
#print(b) #2

# index(값) # index 함수
# 리스트에서 값을 찾아 그 값의 인덱스를 돌려준다. 리턴 반환 돌려주다
# 인덱스를 알아내는 함수
#li[2] --> 인덱싱(인덱스로 값에 접근)
#li.index(값) --> 인덱스 알아내기
#li = [1, 2, 3]
#li.index(2) #1       #대기
#idx = li.index(2) #1 #2의 위치(인덱스)를 알려주는거
#print(idx) #1

# sort()
# 리스트의 요소를 정렬한다.
#li = [5,3,1,4,2]
#li.sort()
#li.sort(reverse=True)
#print(li) # sort()[1,2,3,4,5] 오름차순 정순 # sort(reverse=True) [5,4,3,2,1] 내림차순 역순  

# reverse()
# 리스트의 순서를 뒤집는 함수  # *정렬* 아님 # 그대로 역순으로 뒤집어 나옴
#li=[5,1,3,4,2]
#li.reverse()
#print(li) #[2,4,3,1,5]

# count(값)
# 리스트 안에서 해당 값이 몇 개 있는지 세는 함수
#li = [1,2,3,2]
#cnt = li.count(2) # ex. li 안에 cnt로 2가 몇 개 있는지 셈
#print(cnt) # 2

# + 연산자
# 리스트를 연결 한다.
# extend(확장, (리스트)) + 함수와 같다
#li_1=[1,2,3]
#li_2=[4,5,6]
#print(li_1+li_2) #[1,2,3,4,5,6] # 리스트 결합

#li_1.extend(li_2)  # li_1과 2를 연결
#print(li_1) # [1,2,3,4,6] # print(li_1) #[4,5,6]

# * 연산자
# 리스트를 반복한다 
#li = [1,2,3]
#print(li*3) # [1,2,3,1,2,3,1,2,3]
